[project]
name = "flask-tutorial"
version = "0.1.0"
description = "Miguel Grinberg flask tutorial"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "flask>=3.0.3",
    "python-dotenv>=1.0.1",
    "flask-wtf>=1.2.2",
    "flask-sqlalchemy>=3.1.1",
    "flask-migrate>=4.0.7",
    "flask-login>=0.6.3",
    "email-validator>=2.2.0",
    "flask-mail>=0.10.0",
    "pyjwt>=2.10.1",
    "gunicorn>=23.0.0",
    "psycopg2-binary>=2.9.10",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "taskipy>=1.14.0",
    "ruff>=0.7.1",
    "aiosmtpd>=1.4.6",
]

[tool.taskipy.tasks]
# development tasks
pre_dev = "python manage_dev.py"
dev = "flask run --debug"
shell = "flask shell"
generate_key = "python -c 'import uuid; print(uuid.uuid4().hex)'"
format = "task ruff_format && task ruff_sort_imports"
ruff_format = "ruff format"
ruff_sort_imports = "ruff check --select I --fix"
test = "python tests.py"

# run locally with docker_run and docker_stop
docker_run = "docker compose -f compose-prodtest.yaml up"
docker_down = "docker compose -f compose-prodtest.yaml down"
docker_run_dev = "docker compose -f compose-dev.yaml up --watch"
docker_down_dev = "docker compose -f compose-dev.yaml down"

[tool.ruff]
exclude = ["migrations"]
