[project]
name = "flask-tutorial"
version = "0.1.0"
description = "Miguel Grinberg flask tutorial"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "flask>=3.0.3",
    "python-dotenv>=1.0.1",
    "flask-wtf>=1.2.2",
    "flask-sqlalchemy>=3.1.1",
    "flask-migrate>=4.0.7",
    "flask-login>=0.6.3",
    "email-validator>=2.2.0",
    "flask-mail>=0.10.0",
    "pyjwt>=2.10.1",
    "gunicorn>=23.0.0",
    "psycopg2-binary>=2.9.10",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "taskipy>=1.14.0",
    "ruff>=0.7.1",
    "aiosmtpd>=1.4.6",
]

[tool.taskipy.tasks]
pre_dev = "python manage_dev.py"
dev = "flask run --debug"
build = "docker build -t microblog:latest ."
docker_network = "docker network create microblog-network || true"
docker_postgres = "docker run --name microblog-postgres -e POSTGRES_PASSWORD=devpassword -e POSTGRES_DB=microblog -d --rm --network microblog-network postgres"
pre_docker_run = "task build && task docker_network && task docker_postgres"
docker_run = "docker run --name microblog -d -p 8080:8080 --rm --network microblog-network -e DATABASE_URL=postgresql://postgres:devpassword@microblog-postgres/microblog microblog:latest"
docker_stop = "docker stop microblog || true && docker stop microblog-postgres || true"
shell = "flask shell"
format = "task ruff_format && task ruff_sort_imports"
ruff_format = "ruff format"
ruff_sort_imports = "ruff check --select I --fix"
test = "python tests.py"
generate_key = "python -c 'import uuid; print(uuid.uuid4().hex)'"

[tool.ruff]
exclude = ["migrations"]
